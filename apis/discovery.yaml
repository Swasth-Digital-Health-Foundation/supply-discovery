openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/SwasthDHF/Supply-Discovery/1.0.0
info:
  description: API to enable asyncronous discovery of Medical supplies - V1 focuses on O2 supply discovery
  version: "1.0.0"
  title: Medical Supply Dicovery API 
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Provider APIs
    description: APIs to be used by Provider side
  - name: App APIs
    description: APIs to be used by End User side apps
paths:
  /register/provider:
    post:
      description: API to register a new provider with the system
      tags:
        - Provider APIs
      responses:
        '200':
          description: Returns a success
          content:
            '*/*':
              schema:
                type: object
                description: ack.body.message.id to contain system genearted provider id
                properties:
                  ack:
                    $ref: '#/components/schemas/ack'
      requestBody:
        description: Register a new Provider ( HSP )
        required: true 
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  allOf:
                  - $ref: '#/components/schemas/header'
                message:
                  type : object
                  properties:
                    provider:
                      $ref: '#/components/schemas/provider'
                      
  /update/provider:
    post:
      description: API to update provider information. One of the key usage would be to pause/unpause a provider by allowing to toggle the status between ACTIVE/PAUSED
      tags:
        - Provider APIs
      responses:
        '200':
          description: Returns a success
          content:
            '*/*':
              schema:
                type: object
                description: ack.message to contain system genearted provider id
                properties:
                  ack:
                    $ref: '#/components/schemas/ack'
      requestBody:
        description: Register a new Provider ( HSP )
        required: true 
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  allOf:
                  - $ref: '#/components/schemas/header'
                message:
                  type : object
                  properties:
                    provider:
                      $ref: '#/components/schemas/provider'
                      
  /search/service:
    post:
      description: API to initiate discovery request from end user. This will send the intent to the providers qualified to recieve (e.g. in O2 case it can be the providers within certain range of the provided location)
      tags:
        - App APIs
      responses:
        '200':
          description: Returns a success
          content:
            '*/*':
              schema:
                type: object
                description: ack.message to contain system genearted unique search id
                properties:
                  ack:
                    $ref: '#/components/schemas/ack'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  allOf:
                  - $ref: '#/components/schemas/header'
                message:
                  type: object
                  properties:
                    intent:
                      oneOf:
                        - $ref: '#/components/schemas/o2_intent'
        description: Search the HSPs for a matching set of providers
        required: true
        
  /on_search/service:
    post:
      description: API to respond to a received search intent - when a provider accpets the request to serve a particular search intent. This API may be called multiple times for each search intend depending on how many providers respond to the intent.  
      tags:
        - Provider APIs
      responses:
        '200':
          description: Returns a success
          content:
            '*/*':
              schema:
                type: object
                description: ack.message to contain system genearted search id
                properties:
                  ack:
                    $ref: '#/components/schemas/ack'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  $ref: '#/components/schemas/header'
                services:
                  type: array
                  items:
                    $ref: '#/components/schemas/o2_service'
        description: >-
          Call back function when the search listing is prepared by the HSP or gateway
        required: true
        
  /register/feedback:
    post:
      description: API to register user feedback. At this point the API is designed 
      tags:
        - App APIs
      responses:
        '200':
          description: Returns a success
          content:
            '*/*':
              schema:
                type: object
                description: ack.message to contain system genearted feedback id
                properties:
                  ack:
                    $ref: '#/components/schemas/ack'
      requestBody:
        description: Register feedback
        required: true 
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  allOf:
                  - $ref: '#/components/schemas/header'
                message:
                  type : object
                  properties:
                    provider:
                      $ref: '#/components/schemas/feedback'

components:
  schemas:
    header:
      type: object
      properties:
        authtoken:
          description: API key for the authorisation. Same as what is passed in bearer token. Carried here to support non HTTP asynchronous processing protocols 
          type: string
        signature:
          description: Signature of message content to validate its authenticity 
          type: string
        callbackurl:
          description: Callback URL to send the further responses in case of asynch processing. Can be used as status listener. 
          type: string
        caller:
          description: details about the caller. 
          type: object
          properties:
            type:
              type: string
              description: Choose proder if calling on behalf of service provider, choose app if calling on behalf of User, choose gateway if calling as a gateway
              enum:
                - provider
                - app
                - gateway
            id:
              description: EUA or HSP's regsitered ID
              type: string
              
    ack:
      type: object
      properties:
        code: 
          description: namespaced message code on success
          type: string
        message: 
          type: string
        error:
          type: array
          items:
            type: object
            properties:
              code:
                description: namespaced error code
                type: string
              message:
                type: string
    
    provider:
      type: object
      required:
        - name
        - contact
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          readOnly: true
        type: 
          default: ['#/components/schemas/provider_type/oxygen']
          type: array
          items:
            $ref: '#/components/schemas/provider_type'
        status:
          type: string
          enum:
            - ACTIVE
            - PAUSED
            - INACTIVE
        name:
          type: string
          example: ABC Limited
        homePage:
          type: string
          format: url
          example: 'https://www.acme-corp.com'
        contact:
          type: object
          required:
            - mobile
          properties:
            email:
              type: string
              format: email
            mobile:
              type: string
              example: 9876598765
              format: 'd{10}'
            phone:
              type: string
              description: telephone with std code in stdcode-phonenumberxextension format
              example: (080)-23452345x123
        located_at:
          $ref: '#/components/schemas/location'
              
    location:
      type: object
      description: defines the location of the entity
      required:
        - pin_code
      properties:
        pin_code:
          type: string
          format: 'd{6}'
        city:
          type: object
          properties:
            name:
              type: string
            code:
              type: string
              description: in the current implemntation this can be STD code of the city
        address:
          type: object
          description: adderss within the city
          properties:
            door:
              type: string
            building:
              type: string
            area: 
              type: string
              
    o2_intent:
      type: object
      required: 
        - mobile
        - location
      description: search parameters for O2 discovery
      properties:
        mobile:
          type: string
          example: 9876598765
          format: 'd{10}'
        location: 
          $ref: '#/components/schemas/location'
        type:
          type : string
          description: type of oxygen needed, leave blank for any type
          enum:
          - TYPE_B
          - TYPE_D
          
    o2_service:
      type: object
      required: 
       - search_id
       - status
       - provider
       - mobile
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e-d701748f0851
          readOnly: true
        search_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e-d701748f0851
        type:
          type : string
          description: type of oxygen offered, leave blank for any type
          enum:
          - TYPE_B
          - TYPE_D
        expires_at:
          type: string
          format: date_time
        status: 
          type: string
          enum:
            - ACCEPTED
            - REJECTED
        mobile:
          type: string
          example: 9876598765
          format: 'd{10}'
        provider:
          $ref: '#/components/schemas/provider/properties/id'
    
    feedback:
      type: object
      required: 
        - usable
        - mobile
      description: Feedback on usability of bot service
      properties:
        search_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e-d701748f0851
        usable: 
          type: boolean
          default: true
        mobile:
          type: string
          example: 9876598765
          format: 'd{10}'
        rating:
          type: integer
          minimum: 1
          maximum: 5
        reason:
          type: string
          enum:
            - NOT_REQUIRED
            - NOT_RESPONSIVE
            - QUALITY
            - PRICE
        additional:
          type: string
          maximum: 1024
        provider:
          $ref: '#/components/schemas/provider/properties/id'
    
    provider_type:
      type: string
      enum: 
        - oxygen
        - teleconsult
        - ambulance
        - hospital_bed_without_oxygen
        - hposital_bed_with_oxygen
        - medicine
        - nursing
        - home_care